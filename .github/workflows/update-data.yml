name: Update Canasta Básica Data

on:
  schedule:
    # Run on the 15th of each month at 10:00 AM UTC
    - cron: "0 10 15 * *"
  workflow_dispatch: # Allow manual triggering

jobs:
  update-data:
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Fail if it takes longer than 10 minutes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: "4.3.0"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-packages-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: |
            ${{ runner.os }}-r-packages-

      - name: Install R dependencies
        run: |
          # Install specific packages (faster and more reliable than tidyverse)
          Rscript -e "
            options(repos = c(CRAN = 'https://cloud.r-project.org/'))
            pkgs <- c('dplyr', 'purrr', 'stringr', 'tibble', 'readr', 'forcats', 'ggplot2', 'lubridate', 'glue', 'readxl', 'rvest', 'knitr', 'rsconnect', 'hrbrthemes', 'scales', 'shiny', 'bslib', 'DT')
            
            cat('Checking installed packages...\n')
            installed <- installed.packages()[,'Package']
            new_pkgs <- pkgs[!(pkgs %in% installed)]
            
            if(length(new_pkgs) > 0) {
              cat('Installing', length(new_pkgs), 'packages:', paste(new_pkgs, collapse=', '), '\n')
              install.packages(new_pkgs, dependencies = TRUE, Ncpus = 2)
              cat('Package installation completed\n')
            } else {
              cat('All', length(pkgs), 'required packages already installed\n')
            }
            
            # Verify all packages can be loaded
            cat('Verifying package installation...\n')
            for(pkg in pkgs) {
              if(!require(pkg, character.only = TRUE, quietly = TRUE)) {
                stop('Failed to load package: ', pkg)
              }
            }
            cat('All packages verified successfully\n')
          "

      - name: Run data update script
        run: |
          Rscript 02_scrape_auto.R

      - name: Check if data changed
        id: check-data-changes
        run: |
          if [ -f "no_data_changes.flag" ]; then
            echo "data_changed=false" >> $GITHUB_OUTPUT
            echo "No new data found, skipping expensive operations"
          else
            echo "data_changed=true" >> $GITHUB_OUTPUT
            echo "New data found, proceeding with full update"
          fi

      - name: Generate plots (only if data changed)
        if: steps.check-data-changes.outputs.data_changed == 'true'
        run: |
          Rscript 03_plots.R

      - name: Update README (only if data changed)
        if: steps.check-data-changes.outputs.data_changed == 'true'
        run: |
          Rscript -e "knitr::knit('README.Rmd', output = 'README.md')"

      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/ figures/ README.md
          git commit -m "Update canasta básica data, plots, and README - $(date +'%Y-%m-%d')"
          git push

      - name: Deploy Shiny App (if changed)
        if: steps.verify-changed-files.outputs.changed == 'true'
        env:
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
        run: |
          if [ -n "$SHINYAPPS_TOKEN" ] && [ -n "$SHINYAPPS_SECRET" ]; then
            Rscript -e "
              rsconnect::setAccountInfo(
                name = 'rrmaximiliano',
                token = Sys.getenv('SHINYAPPS_TOKEN'),
                secret = Sys.getenv('SHINYAPPS_SECRET')
              )
              # Deploy only essential files to speed up deployment
              rsconnect::deployApp(
                appDir = '.',
                appFiles = c('app.R', 'data/CB_FULL.rds'),
                appName = 'inide-canasta-basica',
                forceUpdate = TRUE,
                launch.browser = FALSE
              )
            "
            echo "Shiny app deployed successfully"
          else
            echo "Shiny deployment credentials not found, skipping deployment"
          fi
